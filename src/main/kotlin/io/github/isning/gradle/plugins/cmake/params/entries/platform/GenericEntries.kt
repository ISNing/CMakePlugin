/*
 * Copyright 2024 ISNing
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.isning.gradle.plugins.cmake.params.entries.platform

import io.github.isning.gradle.plugins.cmake.params.entries.CMakeCacheEntriesWithValueAutoGenerated

interface GenericEntriesProps : PlatformEntriesProps

interface GenericEntries : GenericEntriesProps, PlatformEntries

interface ModifiableGenericEntries : GenericEntries, ModifiablePlatformEntries

interface GenericEntriesAutoGen : GenericEntries, CMakeCacheEntriesWithValueAutoGenerated {
    override val propertyNameToKey: Map<String, String>
        get() = mapOf()
}

/**
 * This class represents the Generic specific entries for the CMake build system.
 * It extends the AbstractPlatformEntries class and adds Generic specific properties.
 */
open class GenericEntriesImpl : AbstractPlatformEntries(), GenericEntriesAutoGen {
    final override val systemName = "Generic"

    override val propertyNameToKey: Map<String, String>
        get() = super<AbstractPlatformEntries>.propertyNameToKey + super<GenericEntriesAutoGen>.propertyNameToKey
}

class ModifiableGenericEntriesImpl : ModifiablePlatformEntriesImpl(), ModifiableGenericEntries, GenericEntriesAutoGen {
    override var systemName: String? by recorder.observed("Generic")

    override val propertyNameToKey: Map<String, String>
        get() = super<ModifiablePlatformEntriesImpl>.propertyNameToKey +
                super<GenericEntriesAutoGen>.propertyNameToKey
}