/*
 * Copyright 2024 ISNing
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.isning.gradle.plugins.cmake.params.entries.platform

import io.github.isning.gradle.plugins.cmake.params.entries.CMakeCacheEntriesWithValueAutoGenerated

interface AndroidEntriesProps : PlatformEntriesProps {
    val antAdditionalOptions: String?
    val api: Int?
    val apiMin: Int?
    val arch: String?
    val archAbi: String?
    val armMode: String?
    val armNeon: Boolean?
    val assetsDirectories: String?
    val androidExceptions: Boolean?
    val gui: Boolean?
    val jarDependencies: String?
    val jarDirectories: String?
    val javaSourceDir: String?
    val nativeLibDependencies: String?
    val nativeLibDirectories: String?
    val ndk: String?
    val ndkDeprecatedHeaders: Boolean?
    val ndkToolchainHostTag: String?
    val ndkToolchainVersion: String?
    val processMax: Int?
    val proguard: String?
    val proguardConfigPath: String?
    val rtti: Boolean?
    val securePropsPath: String?
    val skipAntStep: Boolean?
    val standaloneToolchain: String?
    val stlType: String?
}

interface AndroidEntries : AndroidEntriesProps, PlatformEntries

interface ModifiableAndroidEntries : AndroidEntries, ModifiablePlatformEntries {
    override var antAdditionalOptions: String?
    override var api: Int?
    override var apiMin: Int?
    override var arch: String?
    override var archAbi: String?
    override var armMode: String?
    override var armNeon: Boolean?
    override var assetsDirectories: String?
    override var androidExceptions: Boolean?
    override var gui: Boolean?
    override var jarDependencies: String?
    override var jarDirectories: String?
    override var javaSourceDir: String?
    override var nativeLibDependencies: String?
    override var nativeLibDirectories: String?
    override var ndk: String?
    override var ndkDeprecatedHeaders: Boolean?
    override var ndkToolchainHostTag: String?
    override var ndkToolchainVersion: String?
    override var processMax: Int?
    override var proguard: String?
    override var proguardConfigPath: String?
    override var rtti: Boolean?
    override var securePropsPath: String?
    override var skipAntStep: Boolean?
    override var standaloneToolchain: String?
    override var stlType: String?
}

interface AndroidEntriesAutoGen : AndroidEntries, CMakeCacheEntriesWithValueAutoGenerated {
    override val propertyNameToKey: Map<String, String>
        get() = mapOf(
            "antAdditionalOptions" to "CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS",
            "api" to "CMAKE_ANDROID_API",
            "apiMin" to "CMAKE_ANDROID_API_MIN",
            "arch" to "CMAKE_ANDROID_ARCH",
            "archAbi" to "CMAKE_ANDROID_ARCH_ABI",
            "armMode" to "CMAKE_ANDROID_ARM_MODE",
            "armNeon" to "CMAKE_ANDROID_ARM_NEON",
            "assetsDirectories" to "CMAKE_ANDROID_ASSETS_DIRECTORIES",
            "androidExceptions" to "CMAKE_ANDROID_EXCEPTIONS",
            "gui" to "CMAKE_ANDROID_GUI",
            "jarDependencies" to "CMAKE_ANDROID_JAR_DEPENDENCIES",
            "jarDirectories" to "CMAKE_ANDROID_JAR_DIRECTORIES",
            "javaSourceDir" to "CMAKE_ANDROID_JAVA_SOURCE_DIR",
            "nativeLibDependencies" to "CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES",
            "nativeLibDirectories" to "CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES",
            "ndk" to "CMAKE_ANDROID_NDK",
            "ndkDeprecatedHeaders" to "CMAKE_ANDROID_NDK_DEPRECATED_HEADERS",
            "ndkToolchainHostTag" to "CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG",
            "ndkToolchainVersion" to "CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION",
            "processMax" to "CMAKE_ANDROID_PROCESS_MAX",
            "proguard" to "CMAKE_ANDROID_PROGUARD",
            "proguardConfigPath" to "CMAKE_ANDROID_PROGUARD_CONFIG_PATH",
            "rtti" to "CMAKE_ANDROID_RTTI",
            "securePropsPath" to "CMAKE_ANDROID_SECURE_PROPS_PATH",
            "skipAntStep" to "CMAKE_ANDROID_SKIP_ANT_STEP",
            "standaloneToolchain" to "CMAKE_ANDROID_STANDALONE_TOOLCHAIN",
            "stlType" to "CMAKE_ANDROID_STL_TYPE",
        )
}

/**
 * This class represents the Android specific entries for the CMake build system.
 * It extends the AbstractPlatformEntries class and adds Android specific properties.
 *
 * For more information, see [Compiling For Android](https://cmake.org/cmake/help/latest/manual/cmake-toolchains.7.html#cross-compiling-for-android) from CMake's documentation.
 */
open class AndroidEntriesImpl : AbstractPlatformEntries(), AndroidEntriesAutoGen {
    override val antAdditionalOptions: String? = null
    override val api: Int? = null
    override val apiMin: Int? = null
    override val arch: String? = null
    override val archAbi: String? = null
    override val armMode: String? = null
    override val armNeon: Boolean? = null
    override val assetsDirectories: String? = null
    override val androidExceptions: Boolean? = null
    override val gui: Boolean? = null
    override val jarDependencies: String? = null
    override val jarDirectories: String? = null
    override val javaSourceDir: String? = null
    override val nativeLibDependencies: String? = null
    override val nativeLibDirectories: String? = null
    override val ndk: String? = null
    override val ndkDeprecatedHeaders: Boolean? = null
    override val ndkToolchainHostTag: String? = null
    override val ndkToolchainVersion: String? = null
    override val processMax: Int? = null
    override val proguard: String? = null
    override val proguardConfigPath: String? = null
    override val rtti: Boolean? = null
    override val securePropsPath: String? = null
    override val skipAntStep: Boolean? = null
    override val standaloneToolchain: String? = null
    override val stlType: String? = null

    final override val systemName = "Android"
    final override val systemVersion
        get() = api.toString()

    override val propertyNameToKey: Map<String, String>
        get() = super<AbstractPlatformEntries>.propertyNameToKey + super<AndroidEntriesAutoGen>.propertyNameToKey
}

class ModifiableAndroidEntriesImpl : ModifiablePlatformEntriesImpl(), ModifiableAndroidEntries, AndroidEntriesAutoGen {
    override var antAdditionalOptions: String? by recorder.observed(null)
    override var api: Int? by recorder.observed(null)
    override var apiMin: Int? by recorder.observed(null)
    override var arch: String? by recorder.observed(null)
    override var archAbi: String? by recorder.observed(null)
    override var armMode: String? by recorder.observed(null)
    override var armNeon: Boolean? by recorder.observed(null)
    override var assetsDirectories: String? by recorder.observed(null)
    override var androidExceptions: Boolean? by recorder.observed(null)
    override var gui: Boolean? by recorder.observed(null)
    override var jarDependencies: String? by recorder.observed(null)
    override var jarDirectories: String? by recorder.observed(null)
    override var javaSourceDir: String? by recorder.observed(null)
    override var nativeLibDependencies: String? by recorder.observed(null)
    override var nativeLibDirectories: String? by recorder.observed(null)
    override var ndk: String? by recorder.observed(null)
    override var ndkDeprecatedHeaders: Boolean? by recorder.observed(null)
    override var ndkToolchainHostTag: String? by recorder.observed(null)
    override var ndkToolchainVersion: String? by recorder.observed(null)
    override var processMax: Int? by recorder.observed(null)
    override var proguard: String? by recorder.observed(null)
    override var proguardConfigPath: String? by recorder.observed(null)
    override var rtti: Boolean? by recorder.observed(null)
    override var securePropsPath: String? by recorder.observed(null)
    override var skipAntStep: Boolean? by recorder.observed(null)
    override var standaloneToolchain: String? by recorder.observed(null)
    override var stlType: String? by recorder.observed(null)

    override var systemName: String? by recorder.observed("Android")
    override var systemVersion: String?
        get() = api?.toString()
        set(value) {
            api = value?.toInt()
        }

    override val propertyNameToKey: Map<String, String>
        get() = super<ModifiablePlatformEntriesImpl>.propertyNameToKey +
                super<AndroidEntriesAutoGen>.propertyNameToKey
}